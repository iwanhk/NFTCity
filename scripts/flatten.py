from brownie import CivCityNFT, Random, DateTime, SVG, accounts, network, config
import json
from scripts.tools import *
import os, sys

ROOT='0x4a8d100c5b3c09841808d8fe60f6e7ce0812e6154420676e08030af0ad9b43fc'

def flat_contract(name:str, meta_data:dict)-> None:
    if not os.path.exists(name+ '_flat'):
        os.mkdir(name+ '_flat')

    with open(name+ '_flat/settings.json', 'w') as f:
        json.dump(meta_data['standard_json_input']['settings'], f)

    for file in meta_data['standard_json_input']['sources'].keys():
        print(f"Flatten file {file} ")
        with open(name+ '_flat/'+ file, 'w') as f:
            content= meta_data['standard_json_input']['sources'][file]['content'].split('\n')

            for line in content:
                if 'import "' in line:
                    f.write(line.replace('import "', 'import "./')+'\n')
                else:
                    f.write(line+'\n')
            f.write(f'\n// Generated by {__file__} \n')

def main():
    active_network= network.show_active()
    print("Current Network:"+ active_network)
    
    try:
        accounts.add(config['wallets']['admin'])
        admin= accounts[0]
        accounts.add(config['wallets']['creator'])
        creator= accounts[1]

        Random.deploy(addr(admin))
        SVG.deploy(addr(admin))
        DateTime.deploy(addr(admin))

        team= [admin, creator]
        share= [50, 50]
        CivCityNFT.deploy(team, share, ROOT, addr(admin))

        flat_contract('CivCityNFT', CivCityNFT.get_verification_info())

    except Exception:
        console.print_exception()
        # Test net contract address

if __name__=="__main__":
    main()